
@using Microsoft.Extensions.Logging
@using System.Net.Http.Json
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject ILogger<Form> Logger
@inject HttpClient http

<div class="alert alert-secondary mt-4">
    <span class="oi oi-pencil me-2" aria-hidden="true"></span>
    <strong>@Title</strong>

    <EditForm Model="@GameModel" OnValidSubmit="@OnValidSubmit" OnInvalidSubmit="@OnInvalidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="title">Game Title</label>
            <InputText id="title" @bind-Value="GameModel.Title" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
        @if(Success){
         <span class="text-success">Thank you for your submission! You may submit another.</span>   
        }
        @if(Error){
         <span class="text-danger">There was an error. Please try again.</span>   
        }
    </EditForm>

</div>

@code {

    private bool Success, Error = false;

    private GameModel GameModel = new();

    [Parameter]
    public string? Title { get; set; }

    async Task OnValidSubmit(){
        Success = false;
        Error = false;
        Logger.LogInformation($"Valid Form Submit Values: {GameModel.Title}");

        if(http.DefaultRequestHeaders.Contains("x-functions-key"))
            http.DefaultRequestHeaders.Remove("x-functions-key");

        http.DefaultRequestHeaders.Add("x-functions-key", @Configuration["functionsPostKey"]);
        
        var resp = await http.PostAsJsonAsync(@Configuration["functionsPostUrl"], GameModel);
        
        var value = await resp.Content.ReadAsStringAsync();
        if(resp.StatusCode == System.Net.HttpStatusCode.OK)
            Success = true;
        else
            Error = true;

        Logger.LogInformation(value);

        GameModel = new();
    }

    private void OnInvalidSubmit(){
        Logger.LogInformation($"Invalid Form Submit Values: {GameModel.Title}");
    }
}
